language: java
dist: trusty
sudo: required
group: deprecated-2017Q4

jdk: openjdk8

services:
  - docker

before_install:
- echo -e "machine github.com\n  login $GITHUB_TOKEN" >> ~/.netrc
- git lfs pull

addons: # get google-chrome-stable
  chrome: stable
install: # Install ChromeDriver (64bits; replace 64 with 32 for 32bits).
  - wget -N http://chromedriver.storage.googleapis.com/2.30/chromedriver_linux64.zip -P ~/
  - unzip ~/chromedriver_linux64.zip -d ~/
  - rm ~/chromedriver_linux64.zip
  - sudo mv -f ~/chromedriver /usr/local/share/
  - sudo chmod +x /usr/local/share/chromedriver
  - sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver

branches:
  only:
    - master
    - release

stages:
  - Test
  - Push docker image
  - name: deploy prod
if: branch = master

jobs:
  include:
    - stage: Test
      os:
        - linux
      env:
        - BROWSER=chrome
      script:
      - whereis google-chrome-stable
      - whereis chromedriver
 #     - if [ $BROWSER == 'chrome' ]; then docker-compose up --build -d; fi
      - if [ $BROWSER == 'chrome' ]; then mvn test -P linux-chrome -rf :selenium; fi
    - stage: Test
      os:
        - linux
      env:
        - BROWSER=firefox
      script:
  #     - if [ $BROWSER == 'firefox' ]; then docker-compose up --build -d; fi
       - if [ $BROWSER == 'firefox' ]; then mvn test -P linux-firefox -rf :selenium; fi
    - stage: Push docker image
      os:
        - linux
      env:
        - IMAGE=task/delivery
      script:
      - mvn clean package -DskipTests=true
      - mvn docker:build -rf :app
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push ${IMAGE}
    - stage: deploy prod
      env:
        - BRANCH_PROD=prod
      script:
      - git branch ${BRANCH_PROD}
      - git push -f origin ${BRANCH_PROD}
